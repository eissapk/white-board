"use strict";"serviceWorker"in navigator&&window.addEventListener("load",function(){navigator.serviceWorker.register("/white-board/serviceWorker.js").then(function(e){return console.log("service worker registered")}).catch(function(e){return console.log("service worker not registered",e)})});var lastWidth,lastColor,painting=!1,eraserToggle=!0,penWidth=3,penColor="#000000",colorInput=document.getElementById("colorInput"),sizeInput=document.getElementById("sizeInput"),btn=document.querySelector("button"),svg=document.querySelector("svg"),canvas=document.querySelector("canvas"),ctx=canvas.getContext("2d"),setSize=function(){canvas.width=window.innerWidth-15,canvas.height=window.innerHeight-60},eraser=function(e){e.target.classList.contains("clickEraser")&&(eraserToggle=eraserToggle?(lastWidth=penWidth,lastColor=penColor,svg.classList.add("activeEraser"),penWidth=50,!(penColor="#ffffff")):(svg.classList.remove("activeEraser"),penWidth=lastWidth,penColor=lastColor,!0))},mousePos=function(e){"mousedown"==e.type?(painting=!0,draw_via_mouse(e)):(painting=!1,ctx.beginPath())},draw_via_mouse=function(e){e.preventDefault();var t=(e=e||window.event).target.getBoundingClientRect(),n=e.pageX-t.left,o=e.pageY-t.top;painting&&(ctx.lineWidth=penWidth,ctx.lineCap="round",ctx.strokeStyle=penColor,ctx.lineTo(n,o),ctx.stroke(),ctx.beginPath(),ctx.moveTo(n,o))},touchPos=function(e){"touchstart"==e.type?(painting=!0,draw_via_touch(e)):(painting=!1,ctx.beginPath())},draw_via_touch=function(e){e.preventDefault();var t=(e=e||window.event).target.getBoundingClientRect(),n=e.touches[0].pageX-t.left,o=e.touches[0].pageY-t.top;painting&&(ctx.lineWidth=penWidth,ctx.lineCap="round",ctx.strokeStyle=penColor,ctx.lineTo(n,o),ctx.stroke(),ctx.beginPath(),ctx.moveTo(n,o))};window.addEventListener("DOMContentLoaded",setSize),window.addEventListener("resize",setSize),canvas.addEventListener("mousedown",mousePos),canvas.addEventListener("mouseup",mousePos),canvas.addEventListener("touchstart",touchPos),canvas.addEventListener("touchend",touchPos),canvas.addEventListener("touchmove",draw_via_touch),canvas.addEventListener("mousemove",draw_via_mouse),canvas.addEventListener("mouseleave",function(){painting=!1,ctx.beginPath(),console.log("Out Board")}),sizeInput.addEventListener("input",function(e){eraserToggle||btn.click(),0<+e.target.value&&+e.target.value<=10?penWidth=+e.target.value:+e.target.value<=0?penWidth=1:10<=+e.target.value&&(penWidth=10)}),colorInput.addEventListener("change",function(e){eraserToggle||btn.click(),penColor=e.target.value}),btn.addEventListener("click",eraser),["click","touchstart"].forEach(function(e){return canvas.addEventListener(e,function(){return sizeInput.blur()})});
//# sourceMappingURL=../maps/app.min.js.map
